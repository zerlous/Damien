<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Zerlous</title>
    <link>https://zerlous.com/posts/</link>
    <description>Recent content in Posts on Zerlous</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 21 Apr 2021 15:13:36 +0800</lastBuildDate><atom:link href="https://zerlous.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Javascript Data Structures</title>
      <link>https://zerlous.com/posts/javascript-data-structures/</link>
      <pubDate>Wed, 21 Apr 2021 15:13:36 +0800</pubDate>
      
      <guid>https://zerlous.com/posts/javascript-data-structures/</guid>
      <description>数组（Array） 描述： 数组的内存分配为按需连续；可以在内存中连续存储多元素的数据结构体；通过数组下标访问获取数组的对应元素（0&amp;hellip;n）。 优点： 数组内元素查询快。（原因：数组的内存分配是连续的，可以通过首地址查询到数组，再通过下标索引快速查到对应元素）。 缺点： 数组内元素增/删慢。(原因：数组的长度固定，增删过程会先创建一个新的数组，并复制原有数组数据)
栈（Stack） 描述： 栈是一种特殊的仅可以支持单端操作的线性表，只可以在栈顶对元素进行入栈和出栈。 特点是先进后出（或后进先出） 优点： 数据存储获取快，栈内存由系统自动分配，并且用完会自动释放。通常用于存储基本数据类型（String，Number，Boolean，Null，Undefined） 缺点： 不灵活，数据存储大小与生命周期固定。
队列 （Queue） 描述： 队列是一种与栈类似，但仅支持队尾入队（新增），队首出队（删除）操作的线性表。 特点是先进先出 优点：</description>
    </item>
    
    <item>
      <title>Aaa</title>
      <link>https://zerlous.com/posts/aaa/</link>
      <pubDate>Wed, 24 Feb 2021 10:55:01 +0800</pubDate>
      
      <guid>https://zerlous.com/posts/aaa/</guid>
      <description></description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://zerlous.com/posts/my-first-post/</link>
      <pubDate>Wed, 24 Feb 2021 10:15:53 +0800</pubDate>
      
      <guid>https://zerlous.com/posts/my-first-post/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://zerlous.com/posts/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zerlous.com/posts/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://zerlous.com/posts/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zerlous.com/posts/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://zerlous.com/posts/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zerlous.com/posts/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://zerlous.com/posts/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zerlous.com/posts/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://zerlous.com/posts/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zerlous.com/posts/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
